*Numeric Data Types

Data Type						Description
1. BIT(size)					a bit-value type. default 1

2. BOOL							Zero is false , nonzero values are true
3. BOOLEAN						Equal to BOOL

4. TINYINT(size)				A very small integer. Signed range from -128 to +127.
								Unsigned range is from 0 to 255.
5. SMALLINT(size)				A small integer. Signed range is from -32768 to 32767.
								Unsigned range is from 0 to 65535. (65kb)
6. MEDIUMINT(size)				A medium integer. Signed range is from -8388608 to 8388607.
								Unsigned range is from 0 to 16777215. (16mb)
7. INT(size)					An INT integer. Signed range is from -2147483648 to 2147483647.
								Unsigned range is from 0 to 4294967295. (4GB)
8. INTEGER(size)				Equal to INT(size).
9. BIGINT(size)					A large integer. (16GB)

=>Fixed Point (Exact Value)
10. DECIMAl(size,d)				An exact fixed-point number eg:DECIMA(5,2) (333.33)
11. DEC(size,d)					Equal to DECIMAL(size,d)
=>Floating-Point (Approximate Value)အနီးစပ်ဆုံးတန်ဖိုး
12. FLOAT(p)					A floating point number.(p optional)
13. DOUBLE(size,d)				
14. DOUBLE PERCISION(size,d)	DOUBLE(size,d)


NOTE: DECIMAL for finance ( such as moner )
	FLOAT for science application

______________________________________________________________________________________

=>BOOL and INT(size)

CREATE TABLE items(
	name VARCHAR(20),
	price INT(11),
	status BOOL
);

DESC items;

INSERT INTO items(name,price)
VALUES ('water',100),
('coffee',500),
('cake',800),
('redbull',250.56),
('jam',1000);

SELECT * FROM items;

INSERT INTO items(name,price)
VALUES ('water',100,1),
('coffee',500,0),
('cake',800,1),
('redbull',250.56,0),
('jam',1000,2);


DROP TABLE items;

CREAE TABLE items(
	name VARCHAR(20),
	purchaseprice INT(4) SIGNED,
	sellprice INT(4) UNSIGNED,
	status BOOL
);

DESC items;

INSERT INTO items(name,purchaseprice,sellprice,status)
VALUES ('water',9000,9500,1),
('coffee',-100,100,0),
('cake',800,1000,1),
('redbull',250.42,300.67,1),
('jam',1000,1200,2);

DROP TABLE items;
_________________________

=>Fixed-Point

=>DECIMAL (5,2) (Total Number of Digits, Digits after decimal)
eg(333.33) is mean 5 digits and 2 decimal

fixed-point data type reprecent extra values
DECIMAL(5,3) = 20.234
20.5 = 20.500
20.52356789 = 20.524

				number		precision		scale
				50.234 		5 				3
				42.786 		5 				3

CREATE TABLE items(
	name VARCHAR(20),
	price DECIMAL(6,2)
);

DESC items;

INSERT INTO items(name,price)
VALUE ('water',500);

INSERT INTO items(name,price)
VALUE ('redbull',1000);

INSERT INTO items(name,price)
VALUE ('redbull',1000.99);

INSERT INTO items(name,price)
VALUE ('redbull',10000);

SELECT * FROM items;


___________________________________________

DECIMAL(5) = 12345
DECIMAL(5,0) = 12345

CREATE TABLE teas(
name VARCHAR(20),
ordinaryprice DECIMAL(5),
specialprice DECIMAL(5,0)
);

DESC teas;

*result = 56789 12345
INERT INTO teas(name,ordinaryprice,specialprice)
VALUES ('milk tea',56789,12345);

*result = 56789 12345
INERT INTO teas(name,ordinaryprice,specialprice)
VALUES ('tai tea',56789,12345.00);

*result = 56789 12346 (with 2 warning)
INERT INTO teas(name,ordinaryprice,specialprice)
VALUES ('indonesia tea',56789,12345.56);

*error
INERT INTO teas(name,ordinaryprice,specialprice)
VALUES ('tai tea',567899,123456);


SELECT * FROM teas;

__________________________________________________________

=>Floating-Point

=>FLOAT vs   DOUBLE(,)
Note: FLOAT and DOUBLE data types are floating-point types and reprecent by approximate.
Note: Balance between range and precision.

FLOAT(5,3) = 20.234
20.5 = 20.500
20.52356789 = 20.524 (no warning because 20.524 is an approximate value)

=>FLOAT
CREATE TABLE shoopings(
name VARCHAR(20),
purchaseprice FLOAT,
sellprice FLOAT(4)
);

DESC shoppings;

INSERT INTO shoppings(name,purchaseprice,sellprice)
VALUES ('water',100,100),
('coffee',500,500.34),
('cake',800,800.56),
('snack',250,250.889),
('jam',9000,10000);

SELECT * FROM shoppings;

*result = 112233 112233
INSERT INTO shoppings(name,purshaseprice,sellprice)
VALUES ('brands birdnest',112233.45,112233.45);

*result = 11223300 11223300
INSERT INTO shoppings(name,purshaseprice,sellprice)
VALUES ('royal birdnest',11223344.45,11223344.45);

*result = 1122330000 1122330000
INSERT INTO shoppings(name,purshaseprice,sellprice)
VALUES ('ayo birdnest',1122334455.45,1122334455.45);



=>FLOAT vs BOUBLE
CREATE TABLE buyings(
name VARCHAR(20),
purchaseprice FLOAT,
sellprice DOUBLE
);

DESC buyings;

INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES ('water',100,100),
('coffee',500.34,500.34),
('jam',10000,10000),
('cake',800.56,800.56),
('snack',250.889,250.889);

SELECGT * FROM buyings;

*result 112233 112233.45
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES ('brands birdnest',112233.45,112233.45),

*result 11223300 11223344.45
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES ('royal birdnest',11223344.45,11223344.45),

*result 1122330000 1122334455.45
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES ('ayo birdnest',1122334455.45,1122334455.45),

*result 1122333e15 1122334455667788.45
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES ('brands birdnest',1122334455667788.45,1122334455667788.45),

*result 1.122333e17 1122334455667788.45
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES ('brands birdnest',112233445566778899.45,112233445566778899.45),

*e/E (exponential (exponent)) numeric symbol
eg. 200000 can be write 2e5

___________________________________________________