=>USEFUL FUNCTIONS
*MYSQL Aggregate Functions
COUNT()
AVG()
SUM()
MIN()
MAX()

=>COUNT() Syntax 
NOTE:: Return the number of rows in group, including rows with NULL values;
SELECT COUNT(columnname)
FROM tablename
WHERE condition;




=>SUM() Syntax
NOTE:: Return the summation of all non-NULL values a set.
SELECT SUM(columnnmae)
FROM tablename
WHERE condition;




=>MIN() Syntax
NOTE:: Return the lowest value in a set of non-NULL in a set.
SELECT MIN(columnname)
FROM tablename
WHERE condition



=>MAX(Syntax)
NOTE:: Return the hightest value in a set of non-NULL values.
SELECT MIN(columnname)
FROM tablename
WHERE condition



=>AVG() Syntax
NOTE:: RETURN the average of non-NULL values.
SELECT AVG(columnname)
FROM tablename
WHERE condition;


__________________________________________________________

EXERCISE = COUNT()

SELECT COUNT(name) FROM employees;

SELECT COUNT(city) FROM employees
WHERE city = 'yangon';

SELECT COUNT(employeeid)
FROM employees
WHERE salary > 500000;

__________________________________________________________

EXERCISE = SUM()

SELECT SUM(salary) FROM employees;

SELECT SUM(salary)
FROM employees
WHERE city = 'yangon';


SELECT SUM(salary)
FROM employees
WHERE city ='mandalay';

SELECT SUM(salary)
FROM employees
WHERE city ='bago';

__________________________________________________________

EXERCISE = MIN()

SELECT * FROM employees;

SELECT MIN(salary) FROM employees;

SELECT MIN(age) FROM employees; 

SELECT MIN(salary)
FROM employees
WHERE age > 30;

SELECT COUNT(*),MIN(salary)
FROM employees
WHERE age > 30;

_____________________________________________________________

EERCISE = MAX()        

SELECT * FROM employees;

SELECT MAX(salary) FROM employees;

SELECT MAX(age) FROM employees;

SELECT MAX(salary)
FROM employees
WHERE age > 30;

SELECT COUNT(*),MAX(salary)
FROM employees
WHERE age > 30;

SELECT COUNT(*),MAX(age)
FROM employees
WhERE age > 30;


*error
SELECT MAX(salary),name FROM employees;

SELECT * FROM employees
WHERE salary = 900000;

SELECT name,salary,city FROM employees
WHERE salary = (SELECT MAX(salary) FROM employees);

SELECT * FROM employees
WHERE salary = (SELECT MAX(salary) FROM employees); 


___________________________________________________________________

EXERCISE = AVG()  total value / qty

SELECT * FROM employees;

SELECT AVG(salary) FROM employees;

SELECT SUM(salary)
FROM employees
WHERE age > 30;

_______________________________________________

=>IF() function
=Syntax
IF(condition,true,false);

SELECT IF(100 > 20,'TRUE','FALSE');
SELECT IF(100 < 20,'TRUE','FALSE');

SELECT name,age,salary,
	IF(age > 35,'elder','young') AS 'age control' 
FROM employees;

_______________________________________________________

=>TRUNCATE() function
=Syntax
TRUNCATE(number,decimals);

*result = 123.342
SELECT TRUNCATE(123.342,3);
SELECT TRUNCATE(123.342,5);

*result = 123.34
SELECT TRUNCATE(123.342,2);
*result = 123.3
SELECT TRUNCATE(123.342,1);
SELECT TRUNCATE(123.356,1);
*result = 123
SELECT TRUNCATE(123.342,0);
SELECT TRUNCATE(123.678,0);


SELETC * FROM items;

SELECT name,price,
	TRUNCATE(price,1)
FROM items;

SELECT name,price,
	TRUNCATE(price,1) AS 'integer'
FROM items;

____________________________________

=>FLOOR() function
=Syntax
FLOOR(number);

*result = 123
SELECT FLOOR(123.342);
SELECT FLOOR(123.678);
SELECT FLOOR(123);

SELECT * FROM items;

SELECT naem,price,
	FLOOR(price)
FROM items;

_________________________________________

ROUND() function
ROUND(number,decimals);

*result = 123.342
SELECT TRUNCATE(123.342,3);
SELECT TRUNCATE(123.342,5);

*result = 123.34
SELECT TRUNCATE(123.342,2);
*result = 123.3
SELECT TRUNCATE(123.342,1);
*result = 123.4
SELECT TRUNCATE(123.356,1);
*result = 123
SELECT TRUNCATE(123.342,0);
*result = 124
SELECT TRUNCATE(123.678,0);


SELETC * FROM items;

SELECT name,price,
	ROUND(price,1)
FROM items;

SELECT name,price,
	ROUND(price,1) AS 'integer'
FROM items;

________________________________________________

=>CEIL() / CEILING() function
CEIL(number)
CELING(number)


*result = 124
SELECT CEIL(123.342);
SELECT CEIL(123.678);
*result = 123
SELECT CEIL(123);

SELECT * FROM items;

SELECT naem,price,
	CEIL(price)
FROM items;

_____________________________________

=>ABS() function
ABS(number);

*result = 123.342
SELECT ABS(-123.342);

______________________________________

=>SQRT() function
SQRT(number);

*result = 7
SELECT SQRT(49);

_______________________________________

=>POW() function
POW(base,power);

*result = 100
SELECT POW(10,2);
*result = 64
SELECT POW(4,3);
*result = 216
SELECT POW(6,3);

_______________________________________

=>SIGN() function
SIGN(number);

number > 0 return = 1
number < 0 return = -1
number = 0 return = 0

*result = 1
SELECT SIGN(500);
*result = -1
SELECT SIGN(-500);
*result = 0
SELECT SIGN(0);

_______________________________________

